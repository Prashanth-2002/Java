import java.util.ArrayList;
import java.util.Collections;

class Solution {
    // Function to find the leaders in the array.
    static ArrayList<Integer> leaders(int arr[], int n) {
        ArrayList<Integer> list = new ArrayList<>();
        
        // Adding the last element as it is always a leader
        list.add(arr[n - 1]);
        int leader = arr[n - 1];

        // Traverse the array from right to left
        for (int i = n - 2; i >= 0; i--) {
            // If the current element is greater than or equal to the leader
            // Add it to the leaders list and update the leader
            if (arr[i] >= leader) {
                list.add(arr[i]);
                leader = arr[i];
            }
        }

        // Reverse the list to get the leaders in the correct order
        Collections.reverse(list);
        return list;
    }

    // Main method for testing
    public static void main(String[] args) {
        // Example usage
        int[] exampleArray = {16, 17, 4, 3, 5, 2};
        int n = exampleArray.length;

        // Call the leaders method and print the result
        ArrayList<Integer> result = leaders(exampleArray, n);
        System.out.println("Leaders in the array: " + result);
    }
}
